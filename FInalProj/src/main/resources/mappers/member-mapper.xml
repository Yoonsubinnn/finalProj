<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fin.proj.member.model.dao.MemberDAO">
	
	<select id="login" resultMap="memberResultSet">
		select *
		from users
		where u_id = #{uId} and u_status = 'Y'
	</select>
	
	<resultMap type="Member" id="memberResultSet">
		<id column="U_NO" property="uNo" />		
		<result column="U_ID" property="uId" />
		<result column="U_PWD" property="uPwd" />
		<result column="U_NAME" property="uName" />
		<result column="RESIDENT_NO" property="residentNo" />
		<result column="ADDRESS" property="address" />
		<result column="PHONE" property="phone" />
		<result column="EMAIL" property="email" />
		<result column="U_NICKNAME" property="uNickName" />
		<result column="LOGIN_TYPE" property="loginType" />
		<result column="KAKAO_ID" property="kakaoId" />
		<result column="U_STATUS" property="uStatus" />
		<result column="U_TYPE" property="uType" />
		<result column="REGISTRAR" property="registrar" />
		<result column="ENROLL_DATE" property="enrollDate" />
		<result column="IS_ADMIN" property="isAdmin" />
		<result column="FAILED_COUNT" property="failedCount" />
		<result column="LAST_LOGIN_DATE" property="lastLoginDate" />
	</resultMap>
	
	<insert id="insertUser">
		insert into users
		values(seq_uid.nextval, #{uId}, #{uPwd}, #{uName}, #{residentNo}, #{address}, #{phone}, #{email},
				#{uNickName}, default, null, default, #{uType}, #{registrar}, sysdate, default, default, null)
	</insert>
	
	<select id="checkId" resultType="_int">
		select count(*)
		from users
		where u_id = #{uId}
	</select>
	
	<select id="checkNickName" resultType="_int">
		select count(*)
		from users
		where u_NickName = #{uNickName}
	</select>
	
	<update id="updateMyInfo">
		update users
		set u_name = #{uName}, u_type = #{uType}, registrar = #{registrar}, address = #{address},
		    phone = #{phone}, email = #{email, jdbcType=VARCHAR}, u_nickname = #{uNickName}
		where u_id = #{uId}
	</update>
	
	<update id="deleteUser">
		update users
		set u_status = 'N'
		where u_id = #{uId}
	</update>
	
	<select id="checkNickNameModify" resultType="_int">
	<![CDATA[
		select count(*)
		from users
		where u_nickname = #{uNickName} AND u_id <> #{uId}
	]]>
	</select>
	
	<update id="updatePwd">
		update users
		set u_pwd = #{newPwd}
		where u_id = #{uId}
	</update>
	
	<select id="selectPwd">
		select u_pwd
		from users
		where u_id = #{uId}
	</select>
	
	<select id="searchEmailUser">
		select count(*)
		from users
		where u_name = #{uName} and email = #{email}
	</select>
	
	<select id="searchUser">
		select *
		from users
		where (u_name = #{uName} and email = #{email}) or (u_name = #{uName} and phone = #{phone})
	</select>
	
	<select id="searchEmailUser2">
		select count(*)
		from users
		where u_id = #{uId} and email = #{email}
	</select>
	
	<select id="searchUserPwd">
		select *
		from users
		where (u_id = #{uId} and email = #{email}) or (u_id = #{uId} and phone = #{phone})
	</select>
	
	<select id="searchPhoneUser">
		select count(*)
		from users
		where u_name = #{uName} and phone = #{phone}
	</select>
	
	<select id="searchPhoneUser2">
		select count(*)
		from users
		where u_id = #{uId} and phone = #{phone}
	</select>
	
	<update id="loginFailCount">
		update users
		set failed_count = failed_count + 1
		where u_id = #{uId}
	</update>
	
	<update id="loginFailDate">
		update users
		set last_login_date = #{timestamp}
		where u_id = #{uId}
	</update>
	
	<select id="getListCount" resultType="_int">
		select count(*)
		from users
	</select>
	
	<select id="selectUserList" resultMap="memberResultSet">
	  select *
	  from users
	  order by u_no desc
	</select>
	
	<select id="getUserListCount" resultType="_int">
		select count(*)
		from users
		where u_no = #{uNo}
	</select>
	
	<select id="selectUserListEach" resultMap="memberResultSet">
		select *
		from users
		where u_no = #{uNo}
	</select>
	
	<select id="statusUserList" resultMap="memberResultSet">
		select *
		from users
		where u_status = 'Y'	
	</select>
	
	<select id="getCategoryCount" resultType="_int">
		<if test="#{category} == '활동중인 회원'">		
			select count(*)
			from users
			where u_status = 'Y'
		</if>
		<if test="#{category} != '활동중인 회원'">		
			select count(*)
			from users
			where u_status = 'Y'
		</if>
	</select>
	
	<select id="selectCategoryListAdmin" resultMap="memberResultSet">
		select *
		from users
	</select>
	
</mapper>